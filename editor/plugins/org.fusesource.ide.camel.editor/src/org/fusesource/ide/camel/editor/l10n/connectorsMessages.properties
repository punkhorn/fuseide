###############################################################################
# Copyright (c) 2013 Red Hat, Inc. and others.
# All rights reserved. This program and the accompanying materials 
# are made available under the terms of the Eclipse Public License v1.0
# which accompanies this distribution, and is available at
# http://www.eclipse.org/legal/epl-v10.html
# 
# Contributors:
#     JBoss by Red Hat - Initial implementation.
##############################################################################
ahc_connector_title=Async Http Client (AHC)
ahc_connector_description=HTTP based endpoint for consuming external HTTP resources (as a client to call external servers using HTTP).
	
amqp_connector_title=AMQP
amqp_connector_description=Supports the AMQP protocol using the Client API of the Qpid project.
    
apns_connector_title=APNS
apns_connector_description=Supports sending notifications to Apple Push Notification Servers (APNS) and consuming feedback from the servers.

atom_connector_title=ATOM Feeds
atom_connector_description=Used for polling Atom feeds.

avro_connector_title=Avro
avro_connector_description=Provides a dataformat for avro, which allows serialization and deserialization of messages using Apache Avro's binary dataformat. Moreover, it provides support for Apache Avro's rpc, by providing producers and consumers endpoint for using avro over netty or http.

aws_connector_title=Amazon Service Connector
aws_connector_description=Provides access to Amazon Services like Cloudwatch, DynamoDB, SimpleDB, Simple EMail Service, Simple Notification Service, Simple Queue Service, Simple Workflow Service, Simple Storage Service etc.

bean_validator_connector_title=Bean Validation
bean_validator_connector_description=Performs bean validation of the message body using the Java Bean Validation API (JSR 303). Camel uses the reference implementation, which is Hibernate Validator.

cache_connector_title=Cache
cache_connector_description=Performs caching operations using EHCache as the Cache Implementation. The cache itself is created on demand or if a cache of that name already exists then it is simply utilized with its original settings.

cmis_connector_title=CMIS
cmis_connector_description=Uses the Apache Chemistry client API and allows you to add/read nodes to/from a CMIS compliant content repositories.

cometd_connector_title=Cometd
cometd_connector_description=Transport for working with the jetty implementation of the cometd/bayeux protocol. Using this component in combination with the dojo toolkit library it's possible to push Camel messages directly into the browser using an AJAX based mechanism.

context_connector_title=Context
context_connector_description=Allows you to create new Camel Components from a CamelContext with a number of routes which is then treated as a black box, allowing you to refer to the local endpoints within the component from other CamelContexts.

couchdb_connector_title=CouchDB
couchdb_connector_description=Allows you to treat CouchDB instances as a producer or consumer of messages. (using the lightweight LightCouch API)

crypto_connector_title=Crypto
crypto_connector_description=With Camel cryptographic endpoint and Java's Cryptographic extension it is easy to create Digital Signatures for Exchanges. Camel provides a pair of flexible endpoints which get used in concert to create a signature for an exchange in one part of the exchange's workflow and then verify the signature in a later part of the workflow.

cxf_connector_title=CXF
cxf_connector_description=Provides integration with Apache CXF for connecting to JAX-WS services hosted in CXF.

disruptor_connector_title=Disruptor
disruptor_connector_description=Provides asynchronous SEDA behavior much as the standard SEDA Component, but utilizes a Disruptor instead of a BlockingQueue utilized by the standard SEDA.

dns_connector_title=DNS
dns_connector_description=Offers the following operations: ip (to resolve a domain by its ip), lookup (to lookup information about the domain) and dig (to run DNS queries).

ejb_connector_title=EJB
ejb_connector_description=Binds EJBs to Camel message exchanges.

elasticsearch_connector_title=ElasticSearch
elasticsearch_connector_description=Allows you to interface with an ElasticSearch server.

exec_connector_title=Execute
exec_connector_description=Used to execute system commands.

facebook_connector_title=Facebook
facebook_connector_description=Provides access to all of the Facebook APIs accessible using Facebook4J. It allows producing messages to retrieve, add, and delete posts, likes, comments, photos, albums, videos, photos, checkins, locations, links, etc. It also supports APIs that allow polling for posts, users, checkins, groups, locations, etc.

flatpack_connector_title=FlatPack
flatpack_connector_description=Supports fixed width and delimited file parsing via the FlatPack library.

fop_connector_title=FOP
fop_connector_description=Allows you to render a message into different output formats using Apache FOP.

freemarker_connector_title=FreeMarker
freemarker_connector_description=Allows for processing a message using a FreeMarker template. This can be ideal when using Templating to generate responses for requests.

ftp_connector_title=FTP
ftp_connector_description=Provides access to remote file systems over the FTP, FTPS and SFTP protocols.

gae_connector_title=Google App Engine
gae_connector_description=Provides access to the Google App Engine for use of ghttp, glogin, gtask, gmail and gauth services.

geocoder_connector_title=Geocoder
geocoder_connector_description=Used for looking up geocodes (latitude and longitude) for a given address, or reverse lookup. The component uses the Java API for Google Geocoder library.

guava_eventbus_connector_title=Guava EventBus
guava_eventbus_connector_description=Provides integration bridge between Camel and Google Guava EventBus infrastructure. With the latter component, messages exchanged with the Guava EventBus can be transparently forwarded to the Camel routes. EventBus component allows also to route body of Camel exchanges to the Guava EventBus.

hazelcast_connector_title=Hazelcast
hazelcast_connector_description=Allows you to work with the Hazelcast distributed data grid / cache. Hazelcast is a in memory data grid, entirely written in Java (single jar). It offers a great palette of different data stores like map, multi map (same key, n values), queue, list and atomic number. The main reason to use Hazelcast is its simple cluster support. If you have enabled multicast on your network you can run a cluster with hundred nodes with no extra configuration. Hazelcast can simply configured to add additional features like n copies between nodes (default is 1), cache persistence, network configuration (if needed), near cache, enviction and so on. For more information consult the Hazelcast documentation on http://www.hazelcast.com/docs.jsp.

hbase_connector_title=HBase
hbase_connector_description=Provides an idempotent repository, producers and consumers for Apache HBase.

hdfs_connector_title=HDFS
hdfs_connector_description=Enables you to read and write messages from/to an HDFS file system. HDFS is the distributed file system at the heart of Apache Hadoop.

hdfs2_connector_title=HDFS2
hdfs2_connector_description=Enables you to read and write messages from/to an HDFS file system using Hadoop 2.x. HDFS is the distributed file system at the heart of Apache Hadoop.

http_connector_title=HTTP
http_connector_description=Provides HTTP based endpoints for consuming external HTTP resources (as a client to call external servers using HTTP).

http4_connector_title=HTTP4
http4_connector_description=Provides HTTP based endpoints for calling external HTTP resources (as a client to call external servers using HTTP).

ibatis_connector_title=iBATIS
ibatis_connector_description=Allows you to query, poll, insert, update and delete data in a relational database using Apache iBATIS.

infinispan_connector_title=Infinispan
infinispan_connector_description=Allows you to interact with Infinispan distributed data grid / cache. Infinispan is an extremely scalable, highly available key/value data store and data grid platform written in Java.

irc_connector_title=IRC
irc_connector_description=Allows you to interact with an IRC server.

javaspace_connector_title=JavaSpace
javaspace_connector_description=Allows you working with any JavaSpace compliant implementation and has been tested with both the Blitz implementation and the GigaSpace implementation .

jclouds_connector_title=JClouds
jclouds_connector_description=Allows interaction with cloud provider key-value engines (blobstores) and compute services. The component uses jclouds which is a library that provides abstractions for blobstores and compute services.

jcr_connector_title=JCR
jcr_connector_description=Allows you to add/read nodes to/from a JCR compliant content repository (for example, Apache Jackrabbit) with its producer, or register an EventListener with the consumer.

jdbc_connector_title=JDBC
jdbc_connector_description=Enables you to access databases through JDBC, where SQL queries and operations are sent in the message body. This component uses the standard JDBC API, unlike the SQL Component component, which uses spring-jdbc.

jetty_connector_title=Jetty
jetty_connector_description=provides HTTP-based endpoints for consuming and producing HTTP requests. That is, the Jetty component behaves as a simple Web server. Jetty can also be used as a http client which mean you can also use it with Camel as a producer.

jgroups_connector_title=JGroups
jgroups_connector_description=Provides exchange of messages between Camel infrastructure and JGroups clusters.

jing_connector_title=Jing
jing_connector_description=Uses the Jing Library to perform XML validation of the message body using either RelaxNG XML Syntax or RelaxNG Compact Syntax.

jms_connector_title=JMS
jms_connector_description=Allows messages to be sent to (or consumed from) a JMS Queue or Topic. The implementation of the JMS Component uses Spring's JMS support for declarative transactions, using Spring's JmsTemplate for sending and a MessageListenerContainer for consuming.

jmx_connector_title=JMX
jmx_connector_description=Allows consumers to subscribe to an mbean's Notifications. The component supports passing the Notification object directly through the Exchange or serializing it to XML according to the schema provided within this project. This is a consumer only component. Exceptions are thrown if you attempt to create a producer for it.

jpa_connector_title=JPA
jpa_connector_description=Enables you to store and retrieve Java objects from persistent storage using EJB 3's Java Persistence Architecture (JPA), which is a standard interface layer that wraps Object/Relational Mapping (ORM) products such as OpenJPA, Hibernate, TopLink, and so on.

jsch_connector_title=SCP (Jsch)
jsch_connector_description=Supports the SCP protocol using the Client API of the Jsch project. Jsch is already used in camel by the FTP component for the sftp: protocol.

jt400_connector_title=JT/400
jt400_connector_description=Allows you to exchanges messages with an AS/400 system using data queues.

kafka_connector_title=Kafka
kafka_connector_description=Used for communicating with Apache Kafka message broker.

kestrel_connector_title=Kestrel
kestrel_connector_description=Allows messages to be sent to a Kestrel queue, or messages to be consumed from a Kestrel queue. This component uses the spymemcached client for memcached protocol communication with Kestrel servers.

krati_connector_title=Krati
krati_connector_description=Allows the use Krati datastores and datasets inside Camel. Krati is a simple persistent data store with very low latency and high throughput. It is designed for easy integration with read-write-intensive applications with little effort in tuning configuration, performance and JVM garbage collection.

ldap_connector_title=LDAP
ldap_connector_description=Allows you to perform searches in LDAP servers using filters as the message payload. This component uses standard JNDI (javax.naming package) to access the server. 

lucene_connector_title=Lucene
lucene_connector_description=The lucene component in camel facilitates integration and utilization of Lucene endpoints in enterprise integration patterns and scenarios. The lucene component builds a searchable index of documents when payloads are sent to the Lucene Endpoint and facilitates performing of indexed searches in Camel. This component only supports producer endpoints. 

mail_connector_title=Email
mail_connector_description=Provides access to Email via Spring's Mail support and the underlying JavaMail system. (POP3, IMAP, SMTP, etc.)

mina2_connector_title=MINA
mina2_connector_description=A transport for working with Apache MINA 2.x.

mongodb_connector_title=MongoDB
mongodb_connector_description=Integrates Camel with MongoDB allowing you to interact with MongoDB collections both as a producer (performing operations on the collection) and as a consumer (consuming documents from a MongoDB collection).

mqtt_connector_title=MQTT
mqtt_connector_description=Used for communicating with MQTT compliant message brokers, like Apache ActiveMQ or Mosquitto.

msv_connector_title=MSV
msv_connector_description=Performs XML validation of the message body using the MSV Library and any of the supported XML schema languages, such as XML Schema or RelaxNG XML Syntax. 

mustache_connector_title=Mustache
mustache_connector_description=Allows for processing a message using a Mustache template. This can be ideal when using Templating to generate responses for requests.

mvel_connector_title=MVEL
mvel_connector_description=Allows you to process a message using an MVEL template. This can be ideal when using Templating to generate responses for requests.

mybatis_connector_title=MyBatis
mybatis_connector_description=Allows you to query, poll, insert, update and delete data in a relational database using MyBatis.

nagios_connector_title=Nagios
nagios_connector_description=Allows you to send passive checks to Nagios.

netty_connector_title=TCP / UDP (Netty)
netty_connector_description=Supports both producer and consumer endpoints, has several options and allows fine-grained control of a number of TCP/UDP communication parameters (buffer sizes, keepAlives, tcpNoDelay etc) and facilitates both In-Only and In-Out communication on a Camel route.

netty_http_connector_title=Netty HTTP
netty_http_connector_description=An extension to Netty component to facilitiate HTTP transport with Netty.

optaplanner_connector_title=OptaPlanner
optaplanner_connector_description=Solves the planning problem contained in a message with OptaPlanner.

printer_connector_title=Printer
printer_connector_description=Provides a way to direct payloads on a route to a printer. Obviously the payload has to be a formatted piece of payload in order for the component to appropriately print it. The objective is to be able to direct specific payloads as jobs to a line printer in a camel flow. This component only supports a camel producer endpoint. The functionality allows for the payload to be printed on a default printer, named local, remote or wirelessly linked printer using the javax printing API under the covers.

quartz_connector_title=Quartz 1.x
quartz_connector_description=Provides a scheduled delivery of messages using the Quartz Scheduler 1.x. Each endpoint represents a different timer (in Quartz terms, a Trigger and JobDetail).

quartz2_connector_title=Quartz 2.x
quartz2_connector_description=Provides a scheduled delivery of messages using the Quartz Scheduler 2.x. Each endpoint represents a different timer (in Quartz terms, a Trigger and JobDetail).

quickfix_connector_title=QuickFIX/J
quickfix_connector_description=The quickfix component adapts the QuickFIX/J FIX engine for using in Camel . This component uses the standard Financial Interchange (FIX) protocol for message transport.

rabbitmq_connector_title=RabbitMQ
rabbitmq_connector_description=Allows you produce and consume messages from RabbitMQ instances. Using the RabbitMQ AMQP client, this component offers a pure RabbitMQ approach over the generic AMQP component.

restlet_connector_title=Restlet
restlet_connector_description=Provides Restlet based endpoints for consuming and producing RESTful resources.

rmi_connector_title=RMI
rmi_connector_description=Binds Exchanges to the RMI protocol (JRMP). Since this binding is just using RMI, normal RMI rules still apply regarding what methods can be invoked. This component supports only Exchanges that carry a method invocation from an interface that extends the Remote interface. All parameters in the method should be either Serializable or Remote objects.

routebox_connector_title=Routebox
routebox_connector_description=The routebox endpoint performs the following key functions: \nencapsulation - acts as a blackbox, hosting a collection of camel routes stored in an inner camel context. The inner context is fully under the control of the routebox component and is JVM bound.\nstrategy based indirection - direct payloads sent to the routebox endpoint along a camel route to specific inner routes based on a user defined internal routing strategy or a dispatch map.\nexchange propagation - forward exchanges modified by the routebox endpoint to the next segment of the camel route.

rss_connector_title=RSS Feeds
rss_connector_description=Used for polling RSS feeds. Camel will default poll the feed every 60 seconds.

salesforce_connector_title=Salesforce
salesforce_connector_description=Supports producer and consumer endpoints to communicate with Salesforce using Java DTOs. 

sap_netweaver_connector_title=SAP NetWeaver Gateway
sap_netweaver_connector_description=The sap-netweaver integrates with the SAP NetWeaver Gateway using HTTP transports.

saxon_connector_title=XQuery
saxon_connector_description=Allows you to process a message using an XQuery template. This can be ideal when using Templating to generate respopnses for requests.

servlet_connector_title=Servlet
servlet_connector_description=Provides HTTP based endpoints for consuming HTTP requests that arrive at a HTTP endpoint that is bound to a published Servlet.

sip_connector_title=SIP
sip_connector_description=Supports the SIP Publish and Subscribe capability as described in the RFC3903 - Session Initiation Protocol (SIP) Extension for Event.

sjms_connector_title=SJMS
sjms_connector_description=The Simple JMS Component, or SJMS, is a JMS client for use with Camel that uses well known best practices when it comes to JMS client creation and configuration. SJMS contains a brand new JMS client API written explicitly for Camel eliminating third party messaging implementations keeping it light and resilient.

smpp_connector_title=SMPP / SMS
smpp_connector_description=Provides access to an SMSC (Short Message Service Center) over the SMPP protocol to send and receive SMS. The JSMPP is used.

snmp_connector_title=SNMP
snmp_connector_description=Enables you to poll SNMP capable devices or receiving traps.

solr_connector_title=Lucene Solr
solr_connector_description=Allows you to interface with an Apache Lucene Solr server (based on SolrJ 3.5.0).

splunk_connector_title=Splunk
splunk_connector_description=Provides access to Splunk using the Splunk provided client api, and it enables you to publish and search for events in Splunk.

spring_connector_title=Spring Event
spring_connector_description=Provides access to the Spring ApplicationEvent objects. This allows you to publish ApplicationEvent objects to a Spring ApplicationContext or to consume them. You can then use Enterprise Integration Patterns to process them such as Message Filter.

spring_batch_connector_title=Spring Batch
spring_batch_connector_description=Support classes provide integration bridge between Camel and Spring Batch infrastructure.

spring_integration_connector_title=Spring Integration
spring_integration_connector_description=Provides a bridge for Camel components to talk to spring integration endpoints.

spring_ldap_connector_title=Spring LDAP
spring_ldap_connector_description=Provides a Camel wrapper for Spring LDAP.

spring_redis_connector_title=Spring Redis
spring_redis_connector_description=Allows sending and receiving messages from Redis. Redis is advanced key-value store where keys can contain strings, hashes, lists, sets and sorted sets. In addition it provides pub/sub functionality for inter-app communications.

spring_ws_connector_title=Spring Web Services
spring_ws_connector_description=Allows you to integrate with Spring Web Services. It offers both client-side support, for accessing web services, and server-side support for creating your own contract-first web services.

sql_connector_title=SQL
sql_connector_description=Allows you to work with databases using JDBC queries. The difference between this component and JDBC component is that in case of SQL the query is a property of the endpoint and it uses message payload as parameters passed to the query.

ssh_connector_title=SSH
ssh_connector_description=Enables access to SSH servers such that you can send an SSH command, and process the response.

stax_connector_title=StAX
stax_connector_description=Allows messages to be processed through a SAX ContentHandler.

stomp_connector_title=Stomp
stomp_connector_description=Used for communicating with Stomp compliant message brokers like Apache ActiveMQ or Apache ActiveMQ Apollo.

stream_connector_title=Stream
stream_connector_description=Provides access to the System.in, System.out and System.err streams as well as allowing streaming of file and URL.

stringtemplate_connector_title=String Template
stringtemplate_connector_description=Allows you to process a message using a String Template. This can be ideal when using Templating to generate responses for requests.

twitter_connector_title=Twitter
twitter_connector_description=Enables access to the most useful features of the Twitter API by encapsulating Twitter4J. It allows direct, polling, or event-driven consumption of timelines, users, trends, and direct messages. Also, it supports producing messages as status updates or direct messages.

velocity_connector_title=Velocity
velocity_connector_description=Allows you to process a message using an Apache Velocity template. This can be ideal when using Templating to generate responses for requests.

vertx_connector_title=Vertx
vertx_connector_description=Used for working with the Vertx EventBus. The vertx EventBus sends and receives JSON events.

weather_connector_title=Weather
weather_connector_description=Used for polling weather information from Open Weather Map - a site that provides free global weather and forecast information. The information is returned as a json String object.

websocket_connector_title=Websocket
websocket_connector_description=Provides websocket endpoints for communicating with clients using websocket. The component uses Eclipse Jetty Server which implements the IETF specification (drafts and RFC 6455). It supports the protocols ws:// and wss://. To use wss:// protocol, the SSLContextParameters must be defined.

xmlsecurity_connector_title=XML Security
xmlsecurity_connector_description=Generate and validate XML signatures as described in the W3C standard XML Signature Syntax and Processing or as described in the successor version 1.1. For XML Encryption support, please refer to the XML Security Data Format.

xmpp_connector_title=XMPP (Jabber)
xmpp_connector_description=Interact with XMPP servers. Supports both room based and private person-person conversations.

yammer_connector_title=Yammer
yammer_connector_description=Allows you to interact with the Yammer enterprise social network. Consuming messages, users, and user relationships is supported as well as creating new messages.

zookeeper_connector_title=ZooKeeper
zookeeper_connector_description=Allows interaction with an Apache ZooKeeper cluster 
